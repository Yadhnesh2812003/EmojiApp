{"ast":null,"code":"import Emojidata from './Emojidata';\nimport react, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Gamealgo(props) {\n  let arrAlgo = [{\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }];\n\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 5; j++) {\n      arrAlgo[i].arr[j] = Emojidata[Math.floor(Math.random() * 41)];\n    }\n  }\n\n  console.log(\"Required Data : \" + Emojidata[props.selectedEmoji]);\n  console.log(\"Refn table\");\n\n  for (var i = 0; i < 8; i++) {\n    console.log(\"array No : \" + (i + 1));\n\n    for (var j = 0; j < 5; j++) {\n      console.log(arrAlgo[i].arr[j]);\n    }\n  }\n\n  var Stack = new Array(40);\n  var searchEmg = -1;\n\n  if (props.startGame == true) {\n    let counter = 0;\n    searchEmg = Math.floor(Math.random() * 8);\n\n    while (counter <= 2) {\n      for (j = 0; j < 5; j++) {\n        if (arrAlgo[searchEmg].arr[j] == Emojidata[props.selectedEmoji]) console.log(\"Found at arr no \" + searchEmg + \" index no \" + j);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_c = Gamealgo;\nexport default Gamealgo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gamealgo\");","map":{"version":3,"sources":["D:/Microsoft VS Code/A React-Start/emoji-app/src/components/Gamealgo.js"],"names":["Emojidata","react","useState","Gamealgo","props","arrAlgo","arr","Array","i","j","Math","floor","random","console","log","selectedEmoji","Stack","searchEmg","startGame","counter"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EACA;AACA,MAAIC,OAAO,GAAC,CACR;AACIC,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GADQ,EAIR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAJQ,EAOR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAPQ,EAUR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAVQ,EAaR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAbQ,EAgBR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAhBQ,EAmBR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAnBQ,EAsBR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAtBQ,CAAZ;;AA0BA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EACA;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EACA;AACGJ,MAAAA,OAAO,CAACG,CAAD,CAAP,CAAWF,GAAX,CAAeG,CAAf,IAAkBT,SAAS,CAACU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,CAAD,CAA3B;AACF;AACA;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAmBd,SAAS,CAACI,KAAK,CAACW,aAAP,CAAxC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACI,OAAI,IAAIN,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EACA;AACIK,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAeN,CAAC,GAAC,CAAjB,CAAZ;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EACA;AACJI,MAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACG,CAAD,CAAP,CAAWF,GAAX,CAAeG,CAAf,CAAZ;AACK;AACJ;;AACL,MAAIO,KAAK,GAAC,IAAIT,KAAJ,CAAU,EAAV,CAAV;AACA,MAAIU,SAAS,GAAC,CAAC,CAAf;;AACA,MAAGb,KAAK,CAACc,SAAN,IAAiB,IAApB,EACA;AACI,QAAIC,OAAO,GAAC,CAAZ;AACAF,IAAAA,SAAS,GAACP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,CAAzB,CAAV;;AACA,WAAMO,OAAO,IAAE,CAAf,EACA;AACC,WAAIV,CAAC,GAAC,CAAN,EAAQA,CAAC,GAAC,CAAV,EAAYA,CAAC,EAAb,EACA;AACC,YAAGJ,OAAO,CAACY,SAAD,CAAP,CAAmBX,GAAnB,CAAuBG,CAAvB,KAA2BT,SAAS,CAACI,KAAK,CAACW,aAAP,CAAvC,EACAF,OAAO,CAACC,GAAR,CAAY,qBAAmBG,SAAnB,GAA6B,YAA7B,GAA0CR,CAAtD;AACA;AACD;AACJ;;AACG,sBACI,qCADJ;AAIH;;KAhEQN,Q;AAiET,eAAeA,QAAf","sourcesContent":["import Emojidata from './Emojidata'\r\nimport react,{useState} from 'react'\r\nfunction Gamealgo(props)\r\n{\r\nlet arrAlgo=[\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    }\r\n]\r\nfor(var i=0;i<8;i++)\r\n{\r\nfor(var j=0;j<5;j++)\r\n{\r\n   arrAlgo[i].arr[j]=Emojidata[Math.floor(Math.random()*41)] \r\n}\r\n}\r\nconsole.log(\"Required Data : \"+Emojidata[props.selectedEmoji]);\r\nconsole.log(\"Refn table\");\r\n    for(var i=0;i<8;i++)\r\n    {\r\n        console.log(\"array No : \"+(i+1));\r\n        for(var j=0;j<5;j++)\r\n        {\r\n    console.log(arrAlgo[i].arr[j]);\r\n        }\r\n    }\r\nvar Stack=new Array(40)\r\nvar searchEmg=-1\r\nif(props.startGame==true)\r\n{\r\n    let counter=0\r\n    searchEmg=Math.floor(Math.random()*8)\r\n    while(counter<=2)\r\n    {\r\n     for(j=0;j<5;j++)\r\n     {\r\n      if(arrAlgo[searchEmg].arr[j]==Emojidata[props.selectedEmoji])\r\n      console.log(\"Found at arr no \"+searchEmg+\" index no \"+j);   \r\n     } \r\n    }\r\n}\r\n    return(\r\n        <>\r\n        </>\r\n    )\r\n}\r\nexport default Gamealgo"]},"metadata":{},"sourceType":"module"}
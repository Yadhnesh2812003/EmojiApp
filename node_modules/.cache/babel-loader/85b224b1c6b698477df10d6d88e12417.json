{"ast":null,"code":"import Emojidata from './Emojidata';\nimport react, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Gamealgo(props) {\n  let arrAlgo = [{\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }, {\n    arr: new Array(5)\n  }];\n\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 5; j++) {\n      arrAlgo[i].arr[j] = Emojidata[Math.floor(Math.random() * 41)];\n    }\n  } //console.log(Emojidata[props.selectedEmoji]);\n\n\n  var Stack = new Array(40);\n  var searchEmg = -1;\n\n  if (props.startGame == true) {\n    var i = 0;\n\n    while (i <= 7) {\n      // searchEmg=Math.floor(Math.random()*8)\n      arrAlgo[i].arr.sort();\n      var result = arrAlgo[i].arr.indexOf(Emojidata[props.selectedEmoji]);\n      if (result == -1) console.log(\"Not found\");else console.log(Emojidata[result]);\n      i++;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_c = Gamealgo;\nexport default Gamealgo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gamealgo\");","map":{"version":3,"sources":["D:/Microsoft VS Code/A React-Start/emoji-app/src/components/Gamealgo.js"],"names":["Emojidata","react","useState","Gamealgo","props","arrAlgo","arr","Array","i","j","Math","floor","random","Stack","searchEmg","startGame","sort","result","indexOf","selectedEmoji","console","log"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EACA;AACA,MAAIC,OAAO,GAAC,CACR;AACIC,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GADQ,EAIR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAJQ,EAOR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAPQ,EAUR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAVQ,EAaR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAbQ,EAgBR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAhBQ,EAmBR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAnBQ,EAsBR;AACID,IAAAA,GAAG,EAAC,IAAIC,KAAJ,CAAU,CAAV;AADR,GAtBQ,CAAZ;;AA0BA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EACA;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EACA;AACGJ,MAAAA,OAAO,CAACG,CAAD,CAAP,CAAWF,GAAX,CAAeG,CAAf,IAAkBT,SAAS,CAACU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,CAAD,CAA3B;AACF;AACA,GAjCD,CAkCA;;;AACA,MAAIC,KAAK,GAAC,IAAIN,KAAJ,CAAU,EAAV,CAAV;AACA,MAAIO,SAAS,GAAC,CAAC,CAAf;;AACA,MAAGV,KAAK,CAACW,SAAN,IAAiB,IAApB,EACA;AACI,QAAIP,CAAC,GAAC,CAAN;;AACA,WAAMA,CAAC,IAAE,CAAT,EAAW;AACZ;AACCH,MAAAA,OAAO,CAACG,CAAD,CAAP,CAAWF,GAAX,CAAeU,IAAf;AACA,UAAIC,MAAM,GAACZ,OAAO,CAACG,CAAD,CAAP,CAAWF,GAAX,CAAeY,OAAf,CAAuBlB,SAAS,CAACI,KAAK,CAACe,aAAP,CAAhC,CAAX;AACA,UAAGF,MAAM,IAAE,CAAC,CAAZ,EACAG,OAAO,CAACC,GAAR,CAAY,WAAZ,EADA,KAGAD,OAAO,CAACC,GAAR,CAAYrB,SAAS,CAACiB,MAAD,CAArB;AACAT,MAAAA,CAAC;AACA;AACJ;;AACG,sBACI,qCADJ;AAIH;;KAxDQL,Q;AAyDT,eAAeA,QAAf","sourcesContent":["import Emojidata from './Emojidata'\r\nimport react,{useState} from 'react'\r\nfunction Gamealgo(props)\r\n{\r\nlet arrAlgo=[\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    },\r\n    {\r\n        arr:new Array(5)\r\n    }\r\n]\r\nfor(var i=0;i<8;i++)\r\n{\r\nfor(var j=0;j<5;j++)\r\n{\r\n   arrAlgo[i].arr[j]=Emojidata[Math.floor(Math.random()*41)] \r\n}\r\n}\r\n//console.log(Emojidata[props.selectedEmoji]);\r\nvar Stack=new Array(40)\r\nvar searchEmg=-1\r\nif(props.startGame==true)\r\n{\r\n    var i=0\r\n    while(i<=7){\r\n   // searchEmg=Math.floor(Math.random()*8)\r\n    arrAlgo[i].arr.sort();\r\n    var result=arrAlgo[i].arr.indexOf(Emojidata[props.selectedEmoji])\r\n    if(result==-1)\r\n    console.log(\"Not found\")\r\n    else\r\n    console.log(Emojidata[result])\r\n    i++;\r\n    }\r\n}\r\n    return(\r\n        <>\r\n        </>\r\n    )\r\n}\r\nexport default Gamealgo"]},"metadata":{},"sourceType":"module"}
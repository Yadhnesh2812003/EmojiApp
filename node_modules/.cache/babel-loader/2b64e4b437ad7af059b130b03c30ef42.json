{"ast":null,"code":"var _jsxFileName = \"D:\\\\Microsoft VS Code\\\\A React-Start\\\\emoji-app\\\\src\\\\components\\\\Instructionpan.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from 'react';\nimport Emojidata from './Emojidata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet styleObj = {\n  width: \"500px\",\n  height: \"95px\",\n  backgroundColor: \"rgba(209, 54, 54, 0.897)\",\n  boxShadow: \"2px 2px 29px black inset\",\n  padding: \"34px\",\n  color: \"White\",\n  textAlign: \"center\",\n  paddingTop: \"10px\"\n};\n\nconst Instructionpan = props => {\n  _s();\n\n  const [instr, setInstr] = useState(\" \");\n  setInstr(Emojidata[props.Iindex]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styleObj,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: `${instr}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(Instructionpan, \"9dk2eWCmfX9DHLh313/Y7R1r/WE=\");\n\n_c = Instructionpan;\nexport default Instructionpan;\n\nvar _c;\n\n$RefreshReg$(_c, \"Instructionpan\");","map":{"version":3,"sources":["D:/Microsoft VS Code/A React-Start/emoji-app/src/components/Instructionpan.js"],"names":["react","useState","Emojidata","styleObj","width","height","backgroundColor","boxShadow","padding","color","textAlign","paddingTop","Instructionpan","props","instr","setInstr","Iindex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AACA,IAAIC,QAAQ,GAAC;AACTC,EAAAA,KAAK,EAAC,OADG;AAETC,EAAAA,MAAM,EAAC,MAFE;AAGTC,EAAAA,eAAe,EAAE,0BAHR;AAITC,EAAAA,SAAS,EAAG,0BAJH;AAKTC,EAAAA,OAAO,EAAC,MALC;AAMTC,EAAAA,KAAK,EAAC,OANG;AAOTC,EAAAA,SAAS,EAAC,QAPD;AAQTC,EAAAA,UAAU,EAAC;AARF,CAAb;;AAUA,MAAMC,cAAc,GAAEC,KAAD,IAAS;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBd,QAAQ,CAAC,GAAD,CAA/B;AACAc,EAAAA,QAAQ,CAACb,SAAS,CAACW,KAAK,CAACG,MAAP,CAAV,CAAR;AACA,sBACI;AAAA,2BACJ;AAAK,MAAA,KAAK,EAAEb,QAAZ;AAAA,6BACA;AAAA,kBAAM,GAAEW,KAAM;AAAd;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADI,mBADJ;AAOC,CAVD;;GAAMF,c;;KAAAA,c;AAWN,eAAeA,cAAf","sourcesContent":["import react,{useState} from 'react'\r\nimport Emojidata from './Emojidata'\r\nlet styleObj={\r\n    width:\"500px\",\r\n    height:\"95px\",\r\n    backgroundColor: \"rgba(209, 54, 54, 0.897)\",\r\n    boxShadow:  \"2px 2px 29px black inset\",\r\n    padding:\"34px\",\r\n    color:\"White\",\r\n    textAlign:\"center\",\r\n    paddingTop:\"10px\"\r\n}\r\nconst Instructionpan=(props)=>{\r\nconst [instr,setInstr]=useState(\" \");\r\nsetInstr(Emojidata[props.Iindex]);\r\nreturn(\r\n    <>\r\n<div style={styleObj}>\r\n<h2>{`${instr}`}</h2>\r\n</div>\r\n    </>\r\n)\r\n}\r\nexport default Instructionpan"]},"metadata":{},"sourceType":"module"}
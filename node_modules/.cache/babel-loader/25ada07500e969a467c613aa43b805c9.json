{"ast":null,"code":"var _jsxFileName = \"D:\\\\Microsoft VS Code\\\\A React-Start\\\\emoji-app\\\\src\\\\components\\\\Body.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from 'react';\nimport Instructionpan from './Instructionpan';\nimport Emojidata from './Emojidata';\nimport Emgcard from './Emgcard';\nimport Gameplay from './Gameplay';\nimport Gamealgo from './Gamealgo';\nimport './Body.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar resultData;\nlet boundaryObj = {\n  position: \"absolute\",\n  zIndex: \"5\",\n  border: \"3px solid rgba(238, 28, 28, 0.897)\",\n  width: \"441px\",\n  height: \"55px\",\n  marginTop: \"163px\",\n  backgroundColor: \"rgba(241, 34, 34, 0.08)\",\n  boxShadow: \"2px 2px 29px black inset\"\n};\n\nconst Body = () => {\n  _s();\n\n  const [val1, setVal] = useState(-1);\n  const [cng, setCng] = useState(false);\n  const [start, setStart] = useState(false);\n\n  const cngState = () => {\n    if (val1 == -1) alert(\"Please select any emoji... ;) \");else if (cng == false) {\n      setCng(true);\n    } else {\n      setStart(true);\n      resultData = Gamealgo(val1, start);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Body\",\n      children: [/*#__PURE__*/_jsxDEV(Instructionpan, {\n        Iindex: val1,\n        Icng: cng\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"innerBody\",\n        children: cng == 0 ? Emojidata.map((val, index) => {\n          const setIndex = () => {\n            setVal(index);\n          };\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"EmgCard\",\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              color: \"white\"\n            },\n            onClick: setIndex,\n            children: /*#__PURE__*/_jsxDEV(Emgcard, {\n              Emoji: val,\n              Eindex: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 1\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: boundaryObj,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: resultData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Gameplay, {\n            gameStart: start,\n            finalResult: resultData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"btnContainer\",\n        onClick: cngState,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"white\"\n          },\n          children: cng == 0 ? \"Next\" : \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(Body, \"mnCSD5KlpgD1DH5AItYjw2ArW3o=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["D:/Microsoft VS Code/A React-Start/emoji-app/src/components/Body.js"],"names":["react","useState","Instructionpan","Emojidata","Emgcard","Gameplay","Gamealgo","resultData","boundaryObj","position","zIndex","border","width","height","marginTop","backgroundColor","boxShadow","Body","val1","setVal","cng","setCng","start","setStart","cngState","alert","map","val","index","setIndex","display","flexDirection","color"],"mappings":"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","sourcesContent":["import react,{useState} from 'react'\r\nimport Instructionpan from './Instructionpan'\r\nimport Emojidata from './Emojidata'\r\nimport Emgcard from './Emgcard'\r\nimport Gameplay from './Gameplay'\r\nimport Gamealgo from './Gamealgo'\r\nimport './Body.css'\r\nvar resultData\r\nlet boundaryObj={\r\n    position:\"absolute\",\r\n    zIndex:\"5\",\r\n    border:\"3px solid rgba(238, 28, 28, 0.897)\",\r\n    width:\"441px\",\r\n    height:\"55px\",\r\n    marginTop:\"163px\",\r\n    backgroundColor:\"rgba(241, 34, 34, 0.08)\",\r\n    boxShadow:\"2px 2px 29px black inset\"\r\n  }\r\nconst Body=()=>{\r\nconst [val1,setVal]=useState(-1);\r\nconst [cng,setCng]=useState(false);\r\nconst [start,setStart]=useState(false);\r\nconst cngState=()=>{\r\n    if(val1==-1)\r\n    alert(\"Please select any emoji... ;) \");\r\n    else if(cng==false){\r\n    setCng(true);\r\n    }\r\n    else{\r\n    setStart(true);\r\n     resultData=Gamealgo(val1,start)\r\n    }\r\n}\r\nreturn(\r\n    <>\r\n<div id=\"Body\">\r\n<Instructionpan\r\nIindex={val1}\r\nIcng={cng}\r\n/>\r\n\r\n<div id=\"innerBody\">\r\n\r\n{cng==0?Emojidata.map((val,index)=>{\r\nconst setIndex=()=>{\r\n    setVal(index);\r\n}\r\nreturn(\r\n<div id=\"EmgCard\" style={{display:\"flex\",flexDirection:\"column\",color:\"white\"}} onClick={setIndex}>\r\n    <Emgcard\r\n    Emoji={val}\r\n    Eindex={index}\r\n    />\r\n</div>\r\n    )\r\n\r\n}):\r\n<>\r\n<div style={boundaryObj}>\r\n<span><h1>{resultData}</h1></span>\r\n</div>\r\n<Gameplay gameStart={start} finalResult={resultData} />\r\n</>\r\n}\r\n</div>\r\n<div id=\"btnContainer\" onClick={cngState}>\r\n<h2 style={{color:\"white\"}}>{cng==0?\"Next\":\"Start\"}</h2>\r\n</div>\r\n</div>\r\n</>\r\n)\r\n}\r\nexport default Body"]},"metadata":{},"sourceType":"module"}
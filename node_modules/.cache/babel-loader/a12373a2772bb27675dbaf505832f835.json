{"ast":null,"code":"var _jsxFileName = \"D:\\\\Microsoft VS Code\\\\A React-Start\\\\emoji-app\\\\src\\\\components\\\\Body.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from 'react';\nimport Instructionpan from './Instructionpan';\nimport Emojidata from './Emojidata';\nimport Emgcard from './Emgcard';\nimport Gameplay from './Gameplay'; //import Displayresult from './Displayresult'\n\nimport Gamealgo from './Gamealgo';\nimport './Body.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar resultData;\nlet boundaryObj = {\n  position: \"absolute\",\n  border: \"3px solid rgba(238, 28, 28, 0.897)\",\n  zIndex: \"12\",\n  height: \"60px\",\n  marginTop: \"164px\" //backgroundColor:\"rgba(241, 34, 34)\",\n  //boxShadow:\"2px 2px 29px black inset\"\n\n};\n\nconst Body = () => {\n  _s();\n\n  const [val1, setVal] = useState(-1);\n  const [cng, setCng] = useState(false);\n  const [start, setStart] = useState(false);\n  const [styleForBar, setStyle] = useState({ ...boundaryObj,\n    width: \"441px\"\n  }); // if(start==true)\n  // {\n  //     setTimeout(()=>{\n  //         document.getElementById('openBar').style.width=\"10px\"\n  //     },10000)\n  // }\n\n  const cngState = () => {\n    if (val1 == -1) alert(\"Please select any emoji... ;) \");else if (cng == false) {\n      setCng(true);\n    } else {\n      setStart(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Body\",\n      children: [/*#__PURE__*/_jsxDEV(Instructionpan, {\n        Iindex: val1,\n        Icng: cng\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"innerBody\",\n        children: cng == 0 ? Emojidata.map((val, index) => {\n          const setIndex = () => {\n            setVal(index);\n          };\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"EmgCard\",\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              color: \"white\"\n            },\n            onClick: setIndex,\n            children: /*#__PURE__*/_jsxDEV(Emgcard, {\n              Emoji: val,\n              Eindex: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 1\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Gameplay, {\n            gameStart: start,\n            styleFun: setStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: boundaryObj,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"openBar\",\n              style: styleForBar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(Gamealgo, {\n              startGame: start,\n              selectedEmoji: val1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"btnContainer\",\n        onClick: cngState,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"white\"\n          },\n          children: cng == 0 ? \"Next\" : \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(Body, \"Rixme60MedPlvRnzol6D3OnVJbY=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["D:/Microsoft VS Code/A React-Start/emoji-app/src/components/Body.js"],"names":["react","useState","Instructionpan","Emojidata","Emgcard","Gameplay","Gamealgo","resultData","boundaryObj","position","border","zIndex","height","marginTop","Body","val1","setVal","cng","setCng","start","setStart","styleForBar","setStyle","width","cngState","alert","map","val","index","setIndex","display","flexDirection","color"],"mappings":"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","sourcesContent":["import react,{useState} from 'react'\r\nimport Instructionpan from './Instructionpan'\r\nimport Emojidata from './Emojidata'\r\nimport Emgcard from './Emgcard'\r\nimport Gameplay from './Gameplay'\r\n//import Displayresult from './Displayresult'\r\nimport Gamealgo from './Gamealgo'\r\nimport './Body.css'\r\nvar resultData\r\nlet boundaryObj={\r\n    position:\"absolute\",\r\n    border:\"3px solid rgba(238, 28, 28, 0.897)\",\r\n    zIndex:\"12\",\r\n    height: \"60px\",\r\n    marginTop: \"164px\",\r\n    //backgroundColor:\"rgba(241, 34, 34)\",\r\n    //boxShadow:\"2px 2px 29px black inset\"\r\n  }\r\nconst Body=()=>{\r\nconst [val1,setVal]=useState(-1);\r\nconst [cng,setCng]=useState(false);\r\nconst [start,setStart]=useState(false);\r\nconst [styleForBar,setStyle]=useState({\r\n    ...boundaryObj,\r\n    width:\"441px\",\r\n});\r\n// if(start==true)\r\n// {\r\n//     setTimeout(()=>{\r\n//         document.getElementById('openBar').style.width=\"10px\"\r\n//     },10000)\r\n// }\r\nconst cngState=()=>{\r\n    if(val1==-1)\r\n    alert(\"Please select any emoji... ;) \");\r\n    else if(cng==false){\r\n    setCng(true);\r\n    }\r\n    else{\r\n    setStart(true);\r\n    }\r\n}\r\nreturn(\r\n    <>\r\n<div id=\"Body\">\r\n<Instructionpan\r\nIindex={val1}\r\nIcng={cng}\r\n/>\r\n\r\n<div id=\"innerBody\">\r\n{cng==0?Emojidata.map((val,index)=>{\r\nconst setIndex=()=>{\r\n    setVal(index);\r\n}\r\nreturn(\r\n<div id=\"EmgCard\" style={{display:\"flex\",flexDirection:\"column\",color:\"white\"}} onClick={setIndex}>\r\n    <Emgcard\r\n    Emoji={val}\r\n    Eindex={index}\r\n    />\r\n</div>\r\n    )\r\n\r\n}):\r\n<>\r\n<Gameplay gameStart={start} styleFun={setStyle}/>\r\n<div style={boundaryObj}>\r\n<div id=\"openBar\" style={styleForBar}>\r\n</div>\r\n<Gamealgo startGame={start} selectedEmoji={val1}  />\r\n</div>\r\n</>\r\n}\r\n</div>\r\n<div id=\"btnContainer\" onClick={cngState}>\r\n<h2 style={{color:\"white\"}}>{cng==0?\"Next\":\"Start\"}</h2>\r\n</div>\r\n</div>\r\n</>\r\n)\r\n}\r\nexport default Body"]},"metadata":{},"sourceType":"module"}